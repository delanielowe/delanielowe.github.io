{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Grid","styled","div","props","theme","gridColumns","Content","maxWidths","general","contentPadding","BG","colors","bg","Index","nodes","data","allMdx","avatar","config","name","location","socialMedia","map","project","index","delay","date","frontmatter","title","cover","childImageSharp","fluid","path","fields","slug","areas","key","pageQuery"],"mappings":"mMAQMA,EAAOC,IAAOC,IAAV,kEAAGD,CAAH,wMAEwB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,cAajDC,EAAUL,IAAOC,IAAV,qEAAGD,CAAH,iFAEE,SAAAE,GAAK,OAAIA,EAAMC,MAAMG,UAAUC,SAC/B,SAAAL,GAAK,OAAIA,EAAMC,MAAMK,iBAI9BC,EAAKT,IAAOC,IAAV,gEAAGD,CAAH,0BACc,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,KA8BnCC,UA3BD,SAAC,GAAD,IAEAC,EAFA,EACZC,KACEC,OAAUF,MAFA,OAKZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQG,OAAQC,IAAOD,OAAQE,KAAMD,IAAOC,KAAMC,SAAUF,IAAOE,SAAUC,YAAaH,IAAOG,cACjG,kBAACX,EAAD,KACE,kBAACJ,EAAD,KACE,kBAACN,EAAD,KACGc,EAAMQ,IAAI,SAACC,EAASC,GAAV,OACT,kBAAC,IAAD,CACEC,MAAOD,EACPE,KAAMH,EAAQI,YAAYD,KAC1BE,MAAOL,EAAQI,YAAYC,MAC3BC,MAAON,EAAQI,YAAYE,MAAMC,gBAAgBC,MACjDC,KAAMT,EAAQU,OAAOC,KACrBC,MAAOZ,EAAQI,YAAYQ,MAC3BC,IAAKb,EAAQU,OAAOC,cAkB3B,IAAMG,EAAS","file":"component---src-pages-index-js-be343382bc1594d882de.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { Card, Header, Layout } from '../components'\nimport config from '../../config/site'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.theme.gridColumns}, 1fr);\n  grid-gap: 50px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n\n  .gatsby-image-outer-wrapper,\n  .gatsby-image-wrapper {\n    position: static !important;\n  }\n`\n\nconst Content = styled.div`\n  margin: -6rem auto 0 auto;\n  max-width: ${props => props.theme.maxWidths.general};\n  padding: 0 ${props => props.theme.contentPadding} 6rem;\n  position: relative;\n`\n\nconst BG = styled.div`\n  background-color: ${props => props.theme.colors.bg};\n`\n\nconst Index = ({\n  data: {\n    allMdx: { nodes },\n  },\n}) => (\n  <Layout>\n    <Header avatar={config.avatar} name={config.name} location={config.location} socialMedia={config.socialMedia} />\n    <BG>\n      <Content>\n        <Grid>\n          {nodes.map((project, index) => (\n            <Card\n              delay={index}\n              date={project.frontmatter.date}\n              title={project.frontmatter.title}\n              cover={project.frontmatter.cover.childImageSharp.fluid}\n              path={project.fields.slug}\n              areas={project.frontmatter.areas}\n              key={project.fields.slug}\n            />\n          ))}\n        </Grid>\n      </Content>\n    </BG>\n  </Layout>\n)\n\nexport default Index\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      nodes: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n}\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allMdx(sort: { fields: [frontmatter___title], order: DESC }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          cover {\n            childImageSharp {\n              fluid(maxWidth: 760, quality: 90) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          title\n          areas\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}